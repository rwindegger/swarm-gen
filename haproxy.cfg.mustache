# Generated by rwindegger/swarm-gen

global
	maxconn 256
	tune.ssl.default-dh-param 2048
	ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

defaults
	mode http
	log global
#	option abortonclose
	option dontlognull
	option httplog
	option forwardfor
	option redispatch
	timeout connect 5s
	timeout client 60s
	timeout server 180s
	timeout http-request 5s
	timeout queue 30s
	timeout http-keep-alive 15s
	compression algo gzip raw-deflate
	compression type text/html text/css text/plain text/xml text/x-component text/javascript application/x-javascript application/javascript application/json application/manifest+json application/xml application/xhtml+xml application/rss+xml application/atom+xml application/vnd.ms-fontobject application/x-font-ttf application/x-font-opentype application/x-font-truetype image/svg+xml image/x-icon image/vnd.microsoft.icon font/ttf font/eot font/otf font/opentype image/svg+xml
	compression offload
	
frontend http-in
	bind :::80 v4v6
	stats enable
	stats hide-version
	stats uri /.well-known/haproxy
	acl is_certbot path_beg /.well-known/acme-challenge
{{#enableSSL}}
	redirect scheme https code 301 if !{ ssl_fc } !is_certbot
{{/enableSSL}}
	use_backend certbot if is_certbot
	use_backend %[req.hdr(host),lower,map(/usr/local/etc/haproxy/host.map,default)] if !is_certbot

{{#enableSSL}}
frontend https-in
	bind :::443 v4v6 ssl crt /usr/local/etc/haproxy/certificates alpn h2,http/1.1
	stats enable
	stats hide-version
	stats uri /.well-known/haproxy
	
	acl is_certbot path_beg /.well-known/acme-challenge
	use_backend certbot if is_certbot

	acl speak_alpn_h2 ssl_fc_alpn -i h2
	use_backend %[req.hdr(host),lower,map(/usr/local/etc/haproxy/http2.map,default)] if !is_certbot h2
	
	use_backend %[req.hdr(host),lower,map(/usr/local/etc/haproxy/http11.map,default)] if !is_certbot !h2
	
	default_backend default
	
{{/enableSSL}}
backend certbot
	server certbot {{certhost}}:80 maxconn 15
	
backend default
	option forceclose
	errorfile 503 /usr/local/etc/haproxy/invalid.http
{{#services}}
	{{#isActive}}
	
backend {{name}}-http11
	balance {{labels.haproxy.backend.balance}}
	option {{labels.haproxy.backend.mode}}
	cookie {{labels.haproxy.backend.cookie}}_stick insert indirect nocache
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	option httpchk HEAD {{#labels.haproxy.host.check}}{{labels.haproxy.host.check}}{{/labels.haproxy.host.check}}{{^labels.haproxy.host.check}}/{{/labels.haproxy.host.check}} HTTP/1.1\r\nHost:{{labels.haproxy.host.primary}}
		{{#tasks}}
	server {{name}}-http11-{{slot}} {{hostname}}:{{labels.haproxy.backend.port}} maxconn {{labels.haproxy.backend.maxconn}} check cookie {{id}}{{#labels.haproxy.backend.proxy-pass}} send-proxy{{/labels.haproxy.backend.proxy-pass}}
		{{/tasks}}
{{#labels.haproxy.backend.http2}}

backend {{name}}-http2
	mode tcp
	stick-table type binary len 32 size 30k expire 30m
	acl clienthello req_ssl_hello_type 1
	acl serverhello req_ssl_hello_type 2
	tcp-request inspect-delay 5s
	tcp-request content accept if clienthello
	tcp-response content accept if serverhello
	stick on payload_lv(43,1) if clienthello
	stick store-response payload_lv(43,1) if serverhello
		{{#tasks}}
	server {{name}}-http2-{{slot}} {{hostname}}:{{labels.haproxy.backend.port-http2}} maxconn {{labels.haproxy.backend.maxconn}} check{{#labels.haproxy.backend.proxy-pass-http2}} send-proxy{{/labels.haproxy.backend.proxy-pass-http2}}
		{{/tasks}}
{{/labels.haproxy.backend.http2}}
	{{/isActive}}
{{/services}}
