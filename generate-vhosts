#!/bin/bash
LABEL_PREFIX=$1

DOCKER_SOCK=/var/run/docker.sock

HOST_LABEL=${LABEL_PREFIX}.host
PORT_LABEL=${LABEL_PREFIX}.backend.port

SERVICES=$(curl -s -g --unix-socket ${DOCKER_SOCK} http:/services?filters={%22label%22:[%22${HOST_LABEL}%22]} | jq .)
SERVICE_NAMES=$(echo $SERVICES | jq .[].Spec.Name)

for SERVICE_NAME in ${SERVICE_NAMES}
do
        SERVICE_NAME=$(echo ${SERVICE_NAME} | tr -d '"')

        VHOST=$(echo ${SERVICES} | jq ".[] | select(.Spec.Name == \"${SERVICE_NAME}\") | .Spec.Labels[\"${HOST_LABEL}\"]" | tr -d '"')
        PORT=$(echo ${SERVICES} | jq ".[] | select(.Spec.Name == \"${SERVICE_NAME}\") | .Spec.Labels[\"${PORT_LABEL}\"]" | tr -d '"')

        HOSTS=$(curl -s -g --unix-socket ${DOCKER_SOCK} http:/tasks?filters={%22service%22:[%22${SERVICE_NAME}%22]} | jq "[.[] | select(.Status.State == \"running\") | {id:.ID, slot:.Slot, state:.Status.State, data:.}]")
        HOST_NAMES=$(echo "${HOSTS}" | jq ".[] | \"${SERVICE_NAME}.\" + (.slot | tostring) + \".\" + .id" | tr -d '"')

        echo "upstream ${SERVICE_NAME} {"

        for HOST_NAME in ${HOST_NAMES}
        do
                echo "  server ${HOST_NAME}:${PORT};"
        done

        echo "}"

        echo "server {"

        echo "  server_name ${VHOST};"
        echo "  listen 80;"
        echo "  access_log /var/log/nginx/access.log vhost;"
        echo "  location / {"
        echo "          proxy_pass http://${SERVICE_NAME}"
        echo "  }"

        echo "}"
done
